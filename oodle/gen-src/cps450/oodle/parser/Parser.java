/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.parser;

import cps450.oodle.lexer.*;
import cps450.oodle.node.*;
import cps450.oodle.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAstart1Start */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAstart2Start */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAstart3Start */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAstart4Start */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAstart5Start */
		    {
			ArrayList list = new4();
			push(goTo(0), list);
		    }
		    break;
                    case 5: /* reduce AAstart6Start */
		    {
			ArrayList list = new5();
			push(goTo(0), list);
		    }
		    break;
                    case 6: /* reduce AAstart7Start */
		    {
			ArrayList list = new6();
			push(goTo(0), list);
		    }
		    break;
                    case 7: /* reduce AAstart8Start */
		    {
			ArrayList list = new7();
			push(goTo(0), list);
		    }
		    break;
                    case 8: /* reduce AAclassmore1ClassMore */
		    {
			ArrayList list = new8();
			push(goTo(1), list);
		    }
		    break;
                    case 9: /* reduce AAclassmore2ClassMore */
		    {
			ArrayList list = new9();
			push(goTo(1), list);
		    }
		    break;
                    case 10: /* reduce AAclassdef1ClassDef */
		    {
			ArrayList list = new10();
			push(goTo(2), list);
		    }
		    break;
                    case 11: /* reduce AAclassdef2ClassDef */
		    {
			ArrayList list = new11();
			push(goTo(2), list);
		    }
		    break;
                    case 12: /* reduce AAclassdef3ClassDef */
		    {
			ArrayList list = new12();
			push(goTo(2), list);
		    }
		    break;
                    case 13: /* reduce AAclassdef4ClassDef */
		    {
			ArrayList list = new13();
			push(goTo(2), list);
		    }
		    break;
                    case 14: /* reduce AAclassdef5ClassDef */
		    {
			ArrayList list = new14();
			push(goTo(2), list);
		    }
		    break;
                    case 15: /* reduce AAclassdef6ClassDef */
		    {
			ArrayList list = new15();
			push(goTo(2), list);
		    }
		    break;
                    case 16: /* reduce AAclassdef7ClassDef */
		    {
			ArrayList list = new16();
			push(goTo(2), list);
		    }
		    break;
                    case 17: /* reduce AAclassdef8ClassDef */
		    {
			ArrayList list = new17();
			push(goTo(2), list);
		    }
		    break;
                    case 18: /* reduce AClassInherit */
		    {
			ArrayList list = new18();
			push(goTo(3), list);
		    }
		    break;
                    case 19: /* reduce AAvardecl1VarDecl */
		    {
			ArrayList list = new19();
			push(goTo(4), list);
		    }
		    break;
                    case 20: /* reduce AAvardecl2VarDecl */
		    {
			ArrayList list = new20();
			push(goTo(4), list);
		    }
		    break;
                    case 21: /* reduce AAvardecl3VarDecl */
		    {
			ArrayList list = new21();
			push(goTo(4), list);
		    }
		    break;
                    case 22: /* reduce AAvardecl4VarDecl */
		    {
			ArrayList list = new22();
			push(goTo(4), list);
		    }
		    break;
                    case 23: /* reduce AVarType */
		    {
			ArrayList list = new23();
			push(goTo(5), list);
		    }
		    break;
                    case 24: /* reduce AVarAssign */
		    {
			ArrayList list = new24();
			push(goTo(6), list);
		    }
		    break;
                    case 25: /* reduce AAmethoddecl1MethodDecl */
		    {
			ArrayList list = new25();
			push(goTo(7), list);
		    }
		    break;
                    case 26: /* reduce AAmethoddecl2MethodDecl */
		    {
			ArrayList list = new26();
			push(goTo(7), list);
		    }
		    break;
                    case 27: /* reduce AAmethoddecl3MethodDecl */
		    {
			ArrayList list = new27();
			push(goTo(7), list);
		    }
		    break;
                    case 28: /* reduce AAmethoddecl4MethodDecl */
		    {
			ArrayList list = new28();
			push(goTo(7), list);
		    }
		    break;
                    case 29: /* reduce AAmethoddecl5MethodDecl */
		    {
			ArrayList list = new29();
			push(goTo(7), list);
		    }
		    break;
                    case 30: /* reduce AAmethoddecl6MethodDecl */
		    {
			ArrayList list = new30();
			push(goTo(7), list);
		    }
		    break;
                    case 31: /* reduce AAmethoddecl7MethodDecl */
		    {
			ArrayList list = new31();
			push(goTo(7), list);
		    }
		    break;
                    case 32: /* reduce AAmethoddecl8MethodDecl */
		    {
			ArrayList list = new32();
			push(goTo(7), list);
		    }
		    break;
                    case 33: /* reduce AAargumentdecllist1ArgumentDeclList */
		    {
			ArrayList list = new33();
			push(goTo(8), list);
		    }
		    break;
                    case 34: /* reduce AAargumentdecllist2ArgumentDeclList */
		    {
			ArrayList list = new34();
			push(goTo(8), list);
		    }
		    break;
                    case 35: /* reduce AArgumentDeclList2 */
		    {
			ArrayList list = new35();
			push(goTo(9), list);
		    }
		    break;
                    case 36: /* reduce AArgumentDecl */
		    {
			ArrayList list = new36();
			push(goTo(10), list);
		    }
		    break;
                    case 37: /* reduce AIntType */
		    {
			ArrayList list = new37();
			push(goTo(11), list);
		    }
		    break;
                    case 38: /* reduce AStringType */
		    {
			ArrayList list = new38();
			push(goTo(11), list);
		    }
		    break;
                    case 39: /* reduce ABooleanType */
		    {
			ArrayList list = new39();
			push(goTo(11), list);
		    }
		    break;
                    case 40: /* reduce AIdType */
		    {
			ArrayList list = new40();
			push(goTo(11), list);
		    }
		    break;
                    case 41: /* reduce AExpType */
		    {
			ArrayList list = new41();
			push(goTo(11), list);
		    }
		    break;
                    case 42: /* reduce AAstatementlist1StatementList */
		    {
			ArrayList list = new42();
			push(goTo(12), list);
		    }
		    break;
                    case 43: /* reduce AAstatementlist2StatementList */
		    {
			ArrayList list = new43();
			push(goTo(12), list);
		    }
		    break;
                    case 44: /* reduce AStatementList2 */
		    {
			ArrayList list = new44();
			push(goTo(13), list);
		    }
		    break;
                    case 45: /* reduce AAassignstatement1Statement */
		    {
			ArrayList list = new45();
			push(goTo(14), list);
		    }
		    break;
                    case 46: /* reduce AAassignstatement2Statement */
		    {
			ArrayList list = new46();
			push(goTo(14), list);
		    }
		    break;
                    case 47: /* reduce AAifstatement1Statement */
		    {
			ArrayList list = new47();
			push(goTo(14), list);
		    }
		    break;
                    case 48: /* reduce AAifstatement2Statement */
		    {
			ArrayList list = new48();
			push(goTo(14), list);
		    }
		    break;
                    case 49: /* reduce ALoopStatement */
		    {
			ArrayList list = new49();
			push(goTo(14), list);
		    }
		    break;
                    case 50: /* reduce AAcallstatement1Statement */
		    {
			ArrayList list = new50();
			push(goTo(14), list);
		    }
		    break;
                    case 51: /* reduce AAcallstatement2$1Statement */
		    {
			ArrayList list = new51();
			push(goTo(14), list);
		    }
		    break;
                    case 52: /* reduce AAcallstatement3Statement */
		    {
			ArrayList list = new52();
			push(goTo(14), list);
		    }
		    break;
                    case 53: /* reduce AAcallstatement4$1Statement */
		    {
			ArrayList list = new53();
			push(goTo(14), list);
		    }
		    break;
                    case 54: /* reduce AAssignmentStmt2 */
		    {
			ArrayList list = new54();
			push(goTo(15), list);
		    }
		    break;
                    case 55: /* reduce AElsePart */
		    {
			ArrayList list = new55();
			push(goTo(16), list);
		    }
		    break;
                    case 56: /* reduce AAexprlist1ExprList */
		    {
			ArrayList list = new56();
			push(goTo(17), list);
		    }
		    break;
                    case 57: /* reduce AAexprlist2ExprList */
		    {
			ArrayList list = new57();
			push(goTo(17), list);
		    }
		    break;
                    case 58: /* reduce AExprList2 */
		    {
			ArrayList list = new58();
			push(goTo(18), list);
		    }
		    break;
                    case 59: /* reduce AOrExpr */
		    {
			ArrayList list = new59();
			push(goTo(19), list);
		    }
		    break;
                    case 60: /* reduce AOtherExpr */
		    {
			ArrayList list = new60();
			push(goTo(19), list);
		    }
		    break;
                    case 61: /* reduce AAndExpr2 */
		    {
			ArrayList list = new61();
			push(goTo(20), list);
		    }
		    break;
                    case 62: /* reduce AOtherExpr2 */
		    {
			ArrayList list = new62();
			push(goTo(20), list);
		    }
		    break;
                    case 63: /* reduce AEqExpr3 */
		    {
			ArrayList list = new63();
			push(goTo(21), list);
		    }
		    break;
                    case 64: /* reduce AGtExpr3 */
		    {
			ArrayList list = new64();
			push(goTo(21), list);
		    }
		    break;
                    case 65: /* reduce ALtExpr3 */
		    {
			ArrayList list = new65();
			push(goTo(21), list);
		    }
		    break;
                    case 66: /* reduce AGteqExpr3 */
		    {
			ArrayList list = new66();
			push(goTo(21), list);
		    }
		    break;
                    case 67: /* reduce AOtherExpr3 */
		    {
			ArrayList list = new67();
			push(goTo(21), list);
		    }
		    break;
                    case 68: /* reduce AConcatExpr5 */
		    {
			ArrayList list = new68();
			push(goTo(22), list);
		    }
		    break;
                    case 69: /* reduce AOtherExpr5 */
		    {
			ArrayList list = new69();
			push(goTo(22), list);
		    }
		    break;
                    case 70: /* reduce AAddExpr6 */
		    {
			ArrayList list = new70();
			push(goTo(23), list);
		    }
		    break;
                    case 71: /* reduce ASubExpr6 */
		    {
			ArrayList list = new71();
			push(goTo(23), list);
		    }
		    break;
                    case 72: /* reduce AOtherExpr6 */
		    {
			ArrayList list = new72();
			push(goTo(23), list);
		    }
		    break;
                    case 73: /* reduce AMulExpr7 */
		    {
			ArrayList list = new73();
			push(goTo(24), list);
		    }
		    break;
                    case 74: /* reduce ADivExpr7 */
		    {
			ArrayList list = new74();
			push(goTo(24), list);
		    }
		    break;
                    case 75: /* reduce AOtherExpr7 */
		    {
			ArrayList list = new75();
			push(goTo(24), list);
		    }
		    break;
                    case 76: /* reduce ANegExpr8 */
		    {
			ArrayList list = new76();
			push(goTo(25), list);
		    }
		    break;
                    case 77: /* reduce APosExpr8 */
		    {
			ArrayList list = new77();
			push(goTo(25), list);
		    }
		    break;
                    case 78: /* reduce ANotExpr8 */
		    {
			ArrayList list = new78();
			push(goTo(25), list);
		    }
		    break;
                    case 79: /* reduce AOtherExpr8 */
		    {
			ArrayList list = new79();
			push(goTo(25), list);
		    }
		    break;
                    case 80: /* reduce AArrayExpr9 */
		    {
			ArrayList list = new80();
			push(goTo(26), list);
		    }
		    break;
                    case 81: /* reduce AOtherExpr9 */
		    {
			ArrayList list = new81();
			push(goTo(26), list);
		    }
		    break;
                    case 82: /* reduce AExpArrInx */
		    {
			ArrayList list = new82();
			push(goTo(27), list);
		    }
		    break;
                    case 83: /* reduce AIdExpr10 */
		    {
			ArrayList list = new83();
			push(goTo(28), list);
		    }
		    break;
                    case 84: /* reduce AStringExpr10 */
		    {
			ArrayList list = new84();
			push(goTo(28), list);
		    }
		    break;
                    case 85: /* reduce AIntLitExpr10 */
		    {
			ArrayList list = new85();
			push(goTo(28), list);
		    }
		    break;
                    case 86: /* reduce ATrueExpr10 */
		    {
			ArrayList list = new86();
			push(goTo(28), list);
		    }
		    break;
                    case 87: /* reduce AFalseExpr10 */
		    {
			ArrayList list = new87();
			push(goTo(28), list);
		    }
		    break;
                    case 88: /* reduce ANullExpr10 */
		    {
			ArrayList list = new88();
			push(goTo(28), list);
		    }
		    break;
                    case 89: /* reduce AMeExpr10 */
		    {
			ArrayList list = new89();
			push(goTo(28), list);
		    }
		    break;
                    case 90: /* reduce ANewExpr10 */
		    {
			ArrayList list = new90();
			push(goTo(28), list);
		    }
		    break;
                    case 91: /* reduce AParExpr10 */
		    {
			ArrayList list = new91();
			push(goTo(28), list);
		    }
		    break;
                    case 92: /* reduce AAcallexpr101Expr10 */
		    {
			ArrayList list = new92();
			push(goTo(28), list);
		    }
		    break;
                    case 93: /* reduce AAcallexpr102$1Expr10 */
		    {
			ArrayList list = new93();
			push(goTo(28), list);
		    }
		    break;
                    case 94: /* reduce AAcallexpr103Expr10 */
		    {
			ArrayList list = new94();
			push(goTo(28), list);
		    }
		    break;
                    case 95: /* reduce AAcallexpr104$1Expr10 */
		    {
			ArrayList list = new95();
			push(goTo(28), list);
		    }
		    break;
                    case 96: /* reduce ATerminal$Eol */
		    {
			ArrayList list = new96();
			push(goTo(29), list);
		    }
		    break;
                    case 97: /* reduce ANonTerminal$Eol */
		    {
			ArrayList list = new97();
			push(goTo(29), list);
		    }
		    break;
                    case 98: /* reduce ATerminal$ClassMore */
		    {
			ArrayList list = new98();
			push(goTo(30), list);
		    }
		    break;
                    case 99: /* reduce ANonTerminal$ClassMore */
		    {
			ArrayList list = new99();
			push(goTo(30), list);
		    }
		    break;
                    case 100: /* reduce ATerminal$VarDecl */
		    {
			ArrayList list = new100();
			push(goTo(31), list);
		    }
		    break;
                    case 101: /* reduce ANonTerminal$VarDecl */
		    {
			ArrayList list = new101();
			push(goTo(31), list);
		    }
		    break;
                    case 102: /* reduce ATerminal$MethodDecl */
		    {
			ArrayList list = new102();
			push(goTo(32), list);
		    }
		    break;
                    case 103: /* reduce ANonTerminal$MethodDecl */
		    {
			ArrayList list = new103();
			push(goTo(32), list);
		    }
		    break;
                    case 104: /* reduce ATerminal$ArgumentDeclList2 */
		    {
			ArrayList list = new104();
			push(goTo(33), list);
		    }
		    break;
                    case 105: /* reduce ANonTerminal$ArgumentDeclList2 */
		    {
			ArrayList list = new105();
			push(goTo(33), list);
		    }
		    break;
                    case 106: /* reduce ATerminal$StatementList2 */
		    {
			ArrayList list = new106();
			push(goTo(34), list);
		    }
		    break;
                    case 107: /* reduce ANonTerminal$StatementList2 */
		    {
			ArrayList list = new107();
			push(goTo(34), list);
		    }
		    break;
                    case 108: /* reduce ATerminal$AssignmentStmt2 */
		    {
			ArrayList list = new108();
			push(goTo(35), list);
		    }
		    break;
                    case 109: /* reduce ANonTerminal$AssignmentStmt2 */
		    {
			ArrayList list = new109();
			push(goTo(35), list);
		    }
		    break;
                    case 110: /* reduce ATerminal$ExprList2 */
		    {
			ArrayList list = new110();
			push(goTo(36), list);
		    }
		    break;
                    case 111: /* reduce ANonTerminal$ExprList2 */
		    {
			ArrayList list = new111();
			push(goTo(36), list);
		    }
		    break;
                    case 112: /* reduce ATerminal$ExpArrInx */
		    {
			ArrayList list = new112();
			push(goTo(37), list);
		    }
		    break;
                    case 113: /* reduce ANonTerminal$ExpArrInx */
		    {
			ArrayList list = new113();
			push(goTo(37), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PAStart node1 = (PAStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAstart1Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode3 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList1.get(0);
        {
            // Block
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode3);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAstart2Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode3 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList2.get(0);
        {
            // Block
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode3);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAstart3Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode4 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode4);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAstart4Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode4 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode4);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAstart5Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode3 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList1.get(0);
        {
            // Block
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode3);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAstart6Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode3 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList2.get(0);
        {
            // Block
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode3);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AAstart7Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode4 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode4);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AAstart8Start */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStart pastartNode1;
        {
            // Block
        PAClassDef paclassdefNode2;
        LinkedList listNode4 = new LinkedList();
        paclassdefNode2 = (PAClassDef)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pastartNode1 = new AAStart(paclassdefNode2, listNode4);
        }
	nodeList.add(pastartNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAclassmore1ClassMore */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        paclassdefNode1 = (PAClassDef)nodeArrayList1.get(0);
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAclassmore2ClassMore */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        paclassdefNode1 = (PAClassDef)nodeArrayList2.get(0);
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAclassdef1ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        TId tidNode6;
        tidNode2 = (TId)nodeArrayList2.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tidNode6 = (TId)nodeArrayList6.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, null, listNode4, listNode5, tidNode6);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAclassdef2ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        PAInherit painheritNode3;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        TId tidNode6;
        tidNode2 = (TId)nodeArrayList2.get(0);
        painheritNode3 = (PAInherit)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tidNode6 = (TId)nodeArrayList7.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, painheritNode3, listNode4, listNode5, tidNode6);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAclassdef3ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        TId tidNode7;
        tidNode2 = (TId)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        tidNode7 = (TId)nodeArrayList7.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, null, listNode5, listNode6, tidNode7);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAclassdef4ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        PAInherit painheritNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        TId tidNode7;
        tidNode2 = (TId)nodeArrayList2.get(0);
        painheritNode3 = (PAInherit)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList6.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        tidNode7 = (TId)nodeArrayList8.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, painheritNode3, listNode5, listNode6, tidNode7);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAclassdef5ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        TId tidNode7;
        tidNode2 = (TId)nodeArrayList2.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tidNode7 = (TId)nodeArrayList7.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, null, listNode4, listNode6, tidNode7);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAclassdef6ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        PAInherit painheritNode3;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        TId tidNode7;
        tidNode2 = (TId)nodeArrayList2.get(0);
        painheritNode3 = (PAInherit)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList6.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tidNode7 = (TId)nodeArrayList8.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, painheritNode3, listNode4, listNode6, tidNode7);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAclassdef7ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        TId tidNode8;
        tidNode2 = (TId)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList6.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        tidNode8 = (TId)nodeArrayList8.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, null, listNode5, listNode7, tidNode8);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAclassdef8ClassDef */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAClassDef paclassdefNode1;
        {
            // Block
        TId tidNode2;
        PAInherit painheritNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        TId tidNode8;
        tidNode2 = (TId)nodeArrayList2.get(0);
        painheritNode3 = (PAInherit)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList6.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList7.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        tidNode8 = (TId)nodeArrayList9.get(0);

        paclassdefNode1 = new AAClassDef(tidNode2, painheritNode3, listNode5, listNode7, tidNode8);
        }
	nodeList.add(paclassdefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AClassInherit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAInherit painheritNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList3.get(0);

        painheritNode1 = new AAInherit(tidNode2);
        }
	nodeList.add(painheritNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAvardecl1VarDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAVarDecl pavardeclNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pavardeclNode1 = new AAVarDecl(tidNode2, null, null);
        }
	nodeList.add(pavardeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAvardecl2VarDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAVarDecl pavardeclNode1;
        {
            // Block
        TId tidNode2;
        PAType patypeNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tidNode2 = (TId)nodeArrayList1.get(0);
        patypeNode3 = (PAType)nodeArrayList2.get(0);

        pavardeclNode1 = new AAVarDecl(tidNode2, patypeNode3, null);
        }
	nodeList.add(pavardeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAvardecl3VarDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAVarDecl pavardeclNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PAExpr paexprNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        paexprNode4 = (PAExpr)nodeArrayList2.get(0);

        pavardeclNode1 = new AAVarDecl(tidNode2, null, paexprNode4);
        }
	nodeList.add(pavardeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAvardecl4VarDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAVarDecl pavardeclNode1;
        {
            // Block
        TId tidNode2;
        PAType patypeNode3;
        PAExpr paexprNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        patypeNode3 = (PAType)nodeArrayList2.get(0);
        paexprNode4 = (PAExpr)nodeArrayList3.get(0);

        pavardeclNode1 = new AAVarDecl(tidNode2, patypeNode3, paexprNode4);
        }
	nodeList.add(pavardeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AVarType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAType patypeNode1;
        patypeNode1 = (PAType)nodeArrayList2.get(0);
	nodeList.add(patypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AVarAssign */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList2.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AAmethoddecl1MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList10.get(0);
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList8.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, null, listNode5, listNode6, listNode8);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAmethoddecl2MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList11.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList9.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, null, listNode6, listNode7, listNode9);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AAmethoddecl3MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        PAType patypeNode4;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList11.get(0);
        patypeNode4 = (PAType)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList9.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, patypeNode4, listNode5, listNode6, listNode8);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AAmethoddecl4MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        PAType patypeNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList12.get(0);
        patypeNode4 = (PAType)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList10.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, patypeNode4, listNode6, listNode7, listNode9);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AAmethoddecl5MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList11.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList6.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList9.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, null, listNode5, listNode7, listNode9);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AAmethoddecl6MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList12.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList7.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList10.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, null, listNode6, listNode8, listNode10);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AAmethoddecl7MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        PAType patypeNode4;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList12.get(0);
        patypeNode4 = (PAType)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList7.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList10.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, patypeNode4, listNode5, listNode7, listNode9);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AAmethoddecl8MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAMethodDecl pamethoddeclNode1;
        {
            // Block
        TId tidNode2;
        TId tidNode3;
        PAType patypeNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList13.get(0);
        patypeNode4 = (PAType)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList8.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList11.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pamethoddeclNode1 = new AAMethodDecl(tidNode2, tidNode3, patypeNode4, listNode6, listNode8, listNode10);
        }
	nodeList.add(pamethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAargumentdecllist1ArgumentDeclList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAArgDecl paargdeclNode1;
        paargdeclNode1 = (PAArgDecl)nodeArrayList1.get(0);
	if(paargdeclNode1 != null)
	{
	  listNode2.add(paargdeclNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AAargumentdecllist2ArgumentDeclList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PAArgDecl paargdeclNode1;
        LinkedList listNode2 = new LinkedList();
        paargdeclNode1 = (PAArgDecl)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(paargdeclNode1 != null)
	{
	  listNode3.add(paargdeclNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AArgumentDeclList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAArgDecl paargdeclNode1;
        paargdeclNode1 = (PAArgDecl)nodeArrayList2.get(0);
	nodeList.add(paargdeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AArgumentDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAArgDecl paargdeclNode1;
        {
            // Block
        TId tidNode2;
        PAType patypeNode3;
        tidNode2 = (TId)nodeArrayList1.get(0);
        patypeNode3 = (PAType)nodeArrayList3.get(0);

        paargdeclNode1 = new AAArgDecl(tidNode2, patypeNode3);
        }
	nodeList.add(paargdeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce AIntType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAType patypeNode1;
        {
            // Block
        TInt tintNode2;
        tintNode2 = (TInt)nodeArrayList1.get(0);

        patypeNode1 = new AIntAType(tintNode2);
        }
	nodeList.add(patypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AStringType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAType patypeNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        patypeNode1 = new AStringAType(tstringNode2);
        }
	nodeList.add(patypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce ABooleanType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAType patypeNode1;
        {
            // Block
        TBoolean tbooleanNode2;
        tbooleanNode2 = (TBoolean)nodeArrayList1.get(0);

        patypeNode1 = new ABooleanAType(tbooleanNode2);
        }
	nodeList.add(patypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AIdType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAType patypeNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        patypeNode1 = new AIdAType(tidNode2);
        }
	nodeList.add(patypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AExpType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAType patypeNode1;
        {
            // Block
        TLBar tlbarNode2;
        PAType patypeNode3;
        PAExpr paexprNode4;
        tlbarNode2 = (TLBar)nodeArrayList2.get(0);
        patypeNode3 = (PAType)nodeArrayList1.get(0);
        paexprNode4 = (PAExpr)nodeArrayList3.get(0);

        patypeNode1 = new AExpAType(tlbarNode2, patypeNode3, paexprNode4);
        }
	nodeList.add(patypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AAstatementlist1StatementList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AAstatementlist2StatementList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AStatementList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        pastmtNode1 = (PAStmt)nodeArrayList1.get(0);
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AAassignstatement1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        TId tidNode2;
        LinkedList listNode3 = new LinkedList();
        PAExpr paexprNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        }
        paexprNode4 = (PAExpr)nodeArrayList3.get(0);

        pastmtNode1 = new AAssignAStmt(tidNode2, listNode3, paexprNode4);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AAassignstatement2Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        TId tidNode2;
        LinkedList listNode4 = new LinkedList();
        PAExpr paexprNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        paexprNode5 = (PAExpr)nodeArrayList4.get(0);

        pastmtNode1 = new AAssignAStmt(tidNode2, listNode4, paexprNode5);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AAifstatement1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        TIf tifNode2;
        PAExpr paexprNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tifNode2 = (TIf)nodeArrayList1.get(0);
        paexprNode3 = (PAExpr)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }

        pastmtNode1 = new AIfAStmt(tifNode2, paexprNode3, listNode5, listNode6);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce AAifstatement2Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        TIf tifNode2;
        PAExpr paexprNode3;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        tifNode2 = (TIf)nodeArrayList1.get(0);
        paexprNode3 = (PAExpr)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList6.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pastmtNode1 = new AIfAStmt(tifNode2, paexprNode3, listNode5, listNode7);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce ALoopStatement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        TWhile twhileNode2;
        PAExpr paexprNode3;
        LinkedList listNode5 = new LinkedList();
        twhileNode2 = (TWhile)nodeArrayList2.get(0);
        paexprNode3 = (PAExpr)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pastmtNode1 = new ALoopAStmt(twhileNode2, paexprNode3, listNode5);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AAcallstatement1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TId tidNode3;
        LinkedList listNode4 = new LinkedList();
        tidNode3 = (TId)nodeArrayList1.get(0);
        {
            // Block
        }

        pastmtNode1 = new ACallAStmt(null, tidNode3, listNode4);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AAcallstatement2$1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        PAExpr paexprNode2;
        TId tidNode3;
        LinkedList listNode4 = new LinkedList();
        paexprNode2 = (PAExpr)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList3.get(0);
        {
            // Block
        }

        pastmtNode1 = new ACallAStmt(paexprNode2, tidNode3, listNode4);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AAcallstatement3Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TId tidNode3;
        LinkedList listNode5 = new LinkedList();
        tidNode3 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pastmtNode1 = new ACallAStmt(null, tidNode3, listNode5);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AAcallstatement4$1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAStmt pastmtNode1;
        {
            // Block
        PAExpr paexprNode2;
        TId tidNode3;
        LinkedList listNode5 = new LinkedList();
        paexprNode2 = (PAExpr)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pastmtNode1 = new ACallAStmt(paexprNode2, tidNode3, listNode5);
        }
	nodeList.add(pastmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce AAssignmentStmt2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList2.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AElsePart */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList3.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AAexprlist1ExprList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	if(paexprNode1 != null)
	{
	  listNode2.add(paexprNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AAexprlist2ExprList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PAExpr paexprNode1;
        LinkedList listNode2 = new LinkedList();
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(paexprNode1 != null)
	{
	  listNode3.add(paexprNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AExprList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList2.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AOrExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TOr torNode3;
        torNode3 = (TOr)nodeArrayList2.get(0);

        paopNode2 = new AOrAOp(torNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce AOtherExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AAndExpr2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TAnd tandNode3;
        tandNode3 = (TAnd)nodeArrayList2.get(0);

        paopNode2 = new AAndAOp(tandNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AOtherExpr2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AEqExpr3 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TEqOp teqopNode3;
        teqopNode3 = (TEqOp)nodeArrayList2.get(0);

        paopNode2 = new AEqAOp(teqopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AGtExpr3 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TGtOp tgtopNode3;
        tgtopNode3 = (TGtOp)nodeArrayList2.get(0);

        paopNode2 = new AGtAOp(tgtopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce ALtExpr3 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TLtOp tltopNode3;
        tltopNode3 = (TLtOp)nodeArrayList2.get(0);

        paopNode2 = new ALtAOp(tltopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AGteqExpr3 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TGteqOp tgteqopNode3;
        tgteqopNode3 = (TGteqOp)nodeArrayList2.get(0);

        paopNode2 = new AGteqAOp(tgteqopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AOtherExpr3 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce AConcatExpr5 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TConcatOp tconcatopNode3;
        tconcatopNode3 = (TConcatOp)nodeArrayList2.get(0);

        paopNode2 = new AConcatAOp(tconcatopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AOtherExpr5 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AAddExpr6 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TPlusOp tplusopNode3;
        tplusopNode3 = (TPlusOp)nodeArrayList2.get(0);

        paopNode2 = new APlusAOp(tplusopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce ASubExpr6 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TMinusOp tminusopNode3;
        tminusopNode3 = (TMinusOp)nodeArrayList2.get(0);

        paopNode2 = new AMinusAOp(tminusopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce AOtherExpr6 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AMulExpr7 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TMultOp tmultopNode3;
        tmultopNode3 = (TMultOp)nodeArrayList2.get(0);

        paopNode2 = new AMulAOp(tmultopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce ADivExpr7 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAOp paopNode2;
        PAExpr paexprNode4;
        PAExpr paexprNode5;
        {
            // Block
        TDivOp tdivopNode3;
        tdivopNode3 = (TDivOp)nodeArrayList2.get(0);

        paopNode2 = new ADivAOp(tdivopNode3);
        }
        paexprNode4 = (PAExpr)nodeArrayList1.get(0);
        paexprNode5 = (PAExpr)nodeArrayList3.get(0);

        paexprNode1 = new ABinAExpr(paopNode2, paexprNode4, paexprNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce AOtherExpr7 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce ANegExpr8 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TMinusOp tminusopNode2;
        PAExpr paexprNode3;
        tminusopNode2 = (TMinusOp)nodeArrayList1.get(0);
        paexprNode3 = (PAExpr)nodeArrayList2.get(0);

        paexprNode1 = new ANegAExpr(tminusopNode2, paexprNode3);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce APosExpr8 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TPlusOp tplusopNode2;
        PAExpr paexprNode3;
        tplusopNode2 = (TPlusOp)nodeArrayList1.get(0);
        paexprNode3 = (PAExpr)nodeArrayList2.get(0);

        paexprNode1 = new APosAExpr(tplusopNode2, paexprNode3);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce ANotExpr8 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TNot tnotNode2;
        PAExpr paexprNode3;
        tnotNode2 = (TNot)nodeArrayList1.get(0);
        paexprNode3 = (PAExpr)nodeArrayList2.get(0);

        paexprNode1 = new ANotAExpr(tnotNode2, paexprNode3);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AOtherExpr8 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AArrayExpr9 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TId tidNode2;
        LinkedList listNode4 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        paexprNode1 = new AArrayAExpr(tidNode2, listNode4);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce AOtherExpr9 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce AExpArrInx */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList2.get(0);
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce AIdExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        paexprNode1 = new AIdAExpr(tidNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce AStringExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TStrlit tstrlitNode2;
        tstrlitNode2 = (TStrlit)nodeArrayList1.get(0);

        paexprNode1 = new AStrAExpr(tstrlitNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce AIntLitExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TIntlit tintlitNode2;
        tintlitNode2 = (TIntlit)nodeArrayList1.get(0);

        paexprNode1 = new AIntAExpr(tintlitNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce ATrueExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TTrue ttrueNode2;
        ttrueNode2 = (TTrue)nodeArrayList1.get(0);

        paexprNode1 = new ATrueAExpr(ttrueNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce AFalseExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TFalse tfalseNode2;
        tfalseNode2 = (TFalse)nodeArrayList1.get(0);

        paexprNode1 = new AFalseAExpr(tfalseNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce ANullExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TNull tnullNode2;
        tnullNode2 = (TNull)nodeArrayList1.get(0);

        paexprNode1 = new ANullAExpr(tnullNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce AMeExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TMe tmeNode2;
        tmeNode2 = (TMe)nodeArrayList1.get(0);

        paexprNode1 = new AMeAExpr(tmeNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce ANewExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TNew tnewNode2;
        PAType patypeNode3;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        patypeNode3 = (PAType)nodeArrayList2.get(0);

        paexprNode1 = new ANewAExpr(tnewNode2, patypeNode3);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce AParExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        PAExpr paexprNode2;
        paexprNode2 = (PAExpr)nodeArrayList2.get(0);

        paexprNode1 = new AParAExpr(paexprNode2);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce AAcallexpr101Expr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode4 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        }

        paexprNode1 = new ACallAExpr(tidNode2, null, listNode4);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce AAcallexpr102$1Expr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TId tidNode2;
        PAExpr paexprNode3;
        LinkedList listNode4 = new LinkedList();
        tidNode2 = (TId)nodeArrayList3.get(0);
        paexprNode3 = (PAExpr)nodeArrayList1.get(0);
        {
            // Block
        }

        paexprNode1 = new ACallAExpr(tidNode2, paexprNode3, listNode4);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce AAcallexpr103Expr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TId tidNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        paexprNode1 = new ACallAExpr(tidNode2, null, listNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce AAcallexpr104$1Expr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAExpr paexprNode1;
        {
            // Block
        TId tidNode2;
        PAExpr paexprNode3;
        LinkedList listNode5 = new LinkedList();
        tidNode2 = (TId)nodeArrayList3.get(0);
        paexprNode3 = (PAExpr)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        paexprNode1 = new ACallAExpr(tidNode2, paexprNode3, listNode5);
        }
	nodeList.add(paexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce ATerminal$Eol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TEol teolNode1;
        teolNode1 = (TEol)nodeArrayList1.get(0);
	if(teolNode1 != null)
	{
	  listNode2.add(teolNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce ANonTerminal$Eol */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TEol teolNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        teolNode2 = (TEol)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(teolNode2 != null)
	{
	  listNode3.add(teolNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce ATerminal$ClassMore */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAClassDef paclassdefNode1;
        paclassdefNode1 = (PAClassDef)nodeArrayList1.get(0);
	if(paclassdefNode1 != null)
	{
	  listNode2.add(paclassdefNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce ANonTerminal$ClassMore */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAClassDef paclassdefNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paclassdefNode2 = (PAClassDef)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paclassdefNode2 != null)
	{
	  listNode3.add(paclassdefNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce ATerminal$VarDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAVarDecl pavardeclNode1;
        pavardeclNode1 = (PAVarDecl)nodeArrayList1.get(0);
	if(pavardeclNode1 != null)
	{
	  listNode2.add(pavardeclNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new101() /* reduce ANonTerminal$VarDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAVarDecl pavardeclNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pavardeclNode2 = (PAVarDecl)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pavardeclNode2 != null)
	{
	  listNode3.add(pavardeclNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new102() /* reduce ATerminal$MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAMethodDecl pamethoddeclNode1;
        pamethoddeclNode1 = (PAMethodDecl)nodeArrayList1.get(0);
	if(pamethoddeclNode1 != null)
	{
	  listNode2.add(pamethoddeclNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new103() /* reduce ANonTerminal$MethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAMethodDecl pamethoddeclNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pamethoddeclNode2 = (PAMethodDecl)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pamethoddeclNode2 != null)
	{
	  listNode3.add(pamethoddeclNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new104() /* reduce ATerminal$ArgumentDeclList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAArgDecl paargdeclNode1;
        paargdeclNode1 = (PAArgDecl)nodeArrayList1.get(0);
	if(paargdeclNode1 != null)
	{
	  listNode2.add(paargdeclNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new105() /* reduce ANonTerminal$ArgumentDeclList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAArgDecl paargdeclNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paargdeclNode2 = (PAArgDecl)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paargdeclNode2 != null)
	{
	  listNode3.add(paargdeclNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new106() /* reduce ATerminal$StatementList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAStmt pastmtNode1;
        pastmtNode1 = (PAStmt)nodeArrayList1.get(0);
	if(pastmtNode1 != null)
	{
	  listNode2.add(pastmtNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new107() /* reduce ANonTerminal$StatementList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAStmt pastmtNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pastmtNode2 = (PAStmt)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pastmtNode2 != null)
	{
	  listNode3.add(pastmtNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new108() /* reduce ATerminal$AssignmentStmt2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	if(paexprNode1 != null)
	{
	  listNode2.add(paexprNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new109() /* reduce ANonTerminal$AssignmentStmt2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAExpr paexprNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paexprNode2 = (PAExpr)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paexprNode2 != null)
	{
	  listNode3.add(paexprNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new110() /* reduce ATerminal$ExprList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	if(paexprNode1 != null)
	{
	  listNode2.add(paexprNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new111() /* reduce ANonTerminal$ExprList2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAExpr paexprNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paexprNode2 = (PAExpr)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paexprNode2 != null)
	{
	  listNode3.add(paexprNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new112() /* reduce ATerminal$ExpArrInx */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAExpr paexprNode1;
        paexprNode1 = (PAExpr)nodeArrayList1.get(0);
	if(paexprNode1 != null)
	{
	  listNode2.add(paexprNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new113() /* reduce ANonTerminal$ExpArrInx */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAExpr paexprNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        paexprNode2 = (PAExpr)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(paexprNode2 != null)
	{
	  listNode3.add(paexprNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {3, SHIFT, 1}, {44, SHIFT, 2}, },
			{{-1, ERROR, 1}, {41, SHIFT, 6}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 3}, {45, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, {3, SHIFT, 1}, {44, SHIFT, 2}, },
			{{-1, ERROR, 5}, {3, SHIFT, 1}, {44, SHIFT, 11}, },
			{{-1, ERROR, 6}, {9, SHIFT, 13}, {11, SHIFT, 14}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 4}, {3, SHIFT, 1}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 2}, {3, SHIFT, 1}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 1}, {3, SHIFT, 1}, {44, SHIFT, 2}, },
			{{-1, ERROR, 13}, {7, SHIFT, 21}, },
			{{-1, ERROR, 14}, {44, SHIFT, 2}, },
			{{-1, ERROR, 15}, {11, SHIFT, 23}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 99}, },
			{{-1, REDUCE, 6}, {3, SHIFT, 1}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 5}, {3, SHIFT, 1}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 3}, {3, SHIFT, 1}, {44, SHIFT, 2}, },
			{{-1, ERROR, 21}, {41, SHIFT, 25}, },
			{{-1, ERROR, 22}, {5, SHIFT, 26}, {41, SHIFT, 27}, {44, SHIFT, 11}, },
			{{-1, ERROR, 23}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 7}, {3, SHIFT, 1}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 26}, {41, SHIFT, 33}, },
			{{-1, ERROR, 27}, {25, SHIFT, 34}, {36, SHIFT, 35}, {37, SHIFT, 36}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 100}, },
			{{-1, REDUCE, 102}, },
			{{-1, ERROR, 30}, {5, SHIFT, 40}, {41, SHIFT, 27}, },
			{{-1, ERROR, 31}, {5, SHIFT, 43}, {41, SHIFT, 44}, },
			{{-1, ERROR, 32}, {5, SHIFT, 46}, {41, SHIFT, 27}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 34}, {1, SHIFT, 49}, {10, SHIFT, 50}, {18, SHIFT, 51}, {41, SHIFT, 52}, },
			{{-1, ERROR, 35}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 36}, {38, SHIFT, 75}, {41, SHIFT, 76}, },
			{{-1, ERROR, 37}, {36, SHIFT, 35}, {44, SHIFT, 2}, },
			{{-1, ERROR, 38}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 19}, {44, SHIFT, 11}, },
			{{-1, ERROR, 40}, {41, SHIFT, 82}, },
			{{-1, REDUCE, 101}, },
			{{-1, ERROR, 42}, {5, SHIFT, 83}, {41, SHIFT, 44}, },
			{{-1, ERROR, 43}, {41, SHIFT, 84}, },
			{{-1, ERROR, 44}, {37, SHIFT, 36}, },
			{{-1, REDUCE, 103}, },
			{{-1, ERROR, 46}, {41, SHIFT, 85}, },
			{{-1, ERROR, 47}, {5, SHIFT, 86}, {41, SHIFT, 27}, },
			{{-1, ERROR, 48}, {5, SHIFT, 88}, {41, SHIFT, 44}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 23}, {39, SHIFT, 89}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 89}, },
			{{-1, ERROR, 56}, {1, SHIFT, 49}, {10, SHIFT, 50}, {18, SHIFT, 51}, {41, SHIFT, 52}, },
			{{-1, ERROR, 57}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 60}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 61}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 62}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 83}, {37, SHIFT, 95}, {39, SHIFT, 96}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 24}, {17, SHIFT, 99}, },
			{{-1, REDUCE, 60}, {0, SHIFT, 100}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 67}, {27, SHIFT, 101}, {28, SHIFT, 102}, {29, SHIFT, 103}, {30, SHIFT, 104}, {31, SHIFT, 105}, },
			{{-1, REDUCE, 69}, {32, SHIFT, 106}, {33, SHIFT, 107}, },
			{{-1, REDUCE, 72}, {34, SHIFT, 108}, {35, SHIFT, 109}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 81}, {26, SHIFT, 110}, },
			{{-1, ERROR, 75}, {11, SHIFT, 111}, {25, SHIFT, 34}, },
			{{-1, ERROR, 76}, {25, SHIFT, 113}, },
			{{-1, ERROR, 77}, {38, SHIFT, 114}, },
			{{-1, REDUCE, 33}, {24, SHIFT, 115}, },
			{{-1, ERROR, 79}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 20}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 21}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 83}, {41, SHIFT, 119}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 86}, {41, SHIFT, 120}, },
			{{-1, ERROR, 87}, {5, SHIFT, 121}, {41, SHIFT, 44}, },
			{{-1, ERROR, 88}, {41, SHIFT, 122}, },
			{{-1, ERROR, 89}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 90}, {39, SHIFT, 89}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 94}, {17, SHIFT, 99}, {38, SHIFT, 124}, },
			{{-1, ERROR, 95}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {38, SHIFT, 125}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 96}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 128}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 80}, {39, SHIFT, 96}, },
			{{-1, ERROR, 99}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 100}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 101}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 102}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 103}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 104}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 105}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 106}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 107}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 108}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 109}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 110}, {41, SHIFT, 142}, },
			{{-1, ERROR, 111}, {44, SHIFT, 2}, },
			{{-1, ERROR, 112}, {11, SHIFT, 144}, },
			{{-1, ERROR, 113}, {1, SHIFT, 49}, {10, SHIFT, 50}, {18, SHIFT, 51}, {41, SHIFT, 52}, },
			{{-1, ERROR, 114}, {11, SHIFT, 146}, {25, SHIFT, 34}, },
			{{-1, ERROR, 115}, {41, SHIFT, 76}, },
			{{-1, REDUCE, 104}, },
			{{-1, REDUCE, 34}, {24, SHIFT, 115}, },
			{{-1, REDUCE, 22}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 121}, {41, SHIFT, 150}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 123}, {17, SHIFT, 99}, {40, SHIFT, 151}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 92}, },
			{{-1, ERROR, 126}, {38, SHIFT, 152}, },
			{{-1, REDUCE, 56}, {17, SHIFT, 99}, {23, SHIFT, 153}, },
			{{-1, REDUCE, 83}, {37, SHIFT, 95}, },
			{{-1, ERROR, 129}, {26, SHIFT, 110}, {40, SHIFT, 156}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 59}, {0, SHIFT, 100}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 65}, {31, SHIFT, 105}, },
			{{-1, REDUCE, 64}, {31, SHIFT, 105}, },
			{{-1, REDUCE, 63}, {31, SHIFT, 105}, },
			{{-1, REDUCE, 66}, {31, SHIFT, 105}, },
			{{-1, REDUCE, 68}, {32, SHIFT, 106}, {33, SHIFT, 107}, },
			{{-1, REDUCE, 70}, {34, SHIFT, 108}, {35, SHIFT, 109}, },
			{{-1, REDUCE, 71}, {34, SHIFT, 108}, {35, SHIFT, 109}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 142}, {37, SHIFT, 157}, },
			{{-1, ERROR, 143}, {2, SHIFT, 158}, {41, SHIFT, 159}, {44, SHIFT, 11}, },
			{{-1, ERROR, 144}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 36}, {39, SHIFT, 89}, },
			{{-1, ERROR, 146}, {44, SHIFT, 2}, },
			{{-1, ERROR, 147}, {11, SHIFT, 163}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 94}, },
			{{-1, ERROR, 153}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 57}, {23, SHIFT, 153}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 157}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {38, SHIFT, 166}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 158}, {44, SHIFT, 2}, },
			{{-1, ERROR, 159}, {25, SHIFT, 34}, {36, SHIFT, 35}, {44, SHIFT, 2}, },
			{{-1, ERROR, 160}, {2, SHIFT, 169}, {41, SHIFT, 159}, },
			{{-1, ERROR, 161}, {2, SHIFT, 170}, {41, SHIFT, 159}, {44, SHIFT, 11}, },
			{{-1, ERROR, 162}, {2, SHIFT, 172}, {41, SHIFT, 159}, {44, SHIFT, 11}, },
			{{-1, ERROR, 163}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 58}, {17, SHIFT, 99}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 167}, {38, SHIFT, 175}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, ERROR, 169}, {44, SHIFT, 2}, },
			{{-1, ERROR, 170}, {44, SHIFT, 2}, },
			{{-1, ERROR, 171}, {2, SHIFT, 186}, {41, SHIFT, 159}, },
			{{-1, ERROR, 172}, {44, SHIFT, 2}, },
			{{-1, ERROR, 173}, {2, SHIFT, 188}, {41, SHIFT, 159}, },
			{{-1, ERROR, 174}, {2, SHIFT, 189}, {41, SHIFT, 159}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 176}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 177}, {21, SHIFT, 192}, },
			{{-1, REDUCE, 83}, {36, SHIFT, 193}, {37, SHIFT, 194}, {39, SHIFT, 195}, },
			{{-1, ERROR, 179}, {5, SHIFT, 198}, },
			{{-1, REDUCE, 106}, },
			{{-1, ERROR, 181}, {44, SHIFT, 2}, },
			{{-1, ERROR, 182}, {26, SHIFT, 200}, },
			{{-1, REDUCE, 43}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, ERROR, 186}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, ERROR, 188}, {44, SHIFT, 2}, },
			{{-1, ERROR, 189}, {44, SHIFT, 2}, },
			{{-1, ERROR, 190}, {2, SHIFT, 208}, {41, SHIFT, 159}, },
			{{-1, ERROR, 191}, {17, SHIFT, 99}, {19, SHIFT, 209}, },
			{{-1, ERROR, 192}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 193}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 194}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {38, SHIFT, 212}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 195}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 108}, },
			{{-1, ERROR, 197}, {36, SHIFT, 215}, {39, SHIFT, 195}, },
			{{-1, ERROR, 198}, {41, SHIFT, 217}, },
			{{-1, REDUCE, 44}, {44, SHIFT, 11}, },
			{{-1, ERROR, 200}, {41, SHIFT, 218}, },
			{{-1, REDUCE, 107}, },
			{{-1, ERROR, 202}, {5, SHIFT, 219}, },
			{{-1, ERROR, 203}, {5, SHIFT, 220}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, ERROR, 205}, {5, SHIFT, 222}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, ERROR, 208}, {44, SHIFT, 2}, },
			{{-1, ERROR, 209}, {44, SHIFT, 2}, },
			{{-1, ERROR, 210}, {17, SHIFT, 99}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 45}, {17, SHIFT, 99}, },
			{{-1, REDUCE, 92}, {44, REDUCE, 50}, },
			{{-1, ERROR, 213}, {38, SHIFT, 228}, },
			{{-1, ERROR, 214}, {17, SHIFT, 99}, {40, SHIFT, 229}, },
			{{-1, ERROR, 215}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, REDUCE, 109}, },
			{{-1, ERROR, 217}, {44, SHIFT, 2}, },
			{{-1, ERROR, 218}, {37, SHIFT, 232}, },
			{{-1, ERROR, 219}, {41, SHIFT, 233}, },
			{{-1, ERROR, 220}, {41, SHIFT, 234}, },
			{{-1, ERROR, 221}, {5, SHIFT, 235}, },
			{{-1, ERROR, 222}, {41, SHIFT, 236}, },
			{{-1, ERROR, 223}, {5, SHIFT, 237}, },
			{{-1, ERROR, 224}, {5, SHIFT, 238}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 94}, {44, REDUCE, 52}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 46}, {17, SHIFT, 99}, },
			{{-1, REDUCE, 25}, {44, SHIFT, 11}, },
			{{-1, ERROR, 232}, {6, SHIFT, 54}, {13, SHIFT, 55}, {14, SHIFT, 56}, {15, SHIFT, 57}, {16, SHIFT, 58}, {20, SHIFT, 59}, {32, SHIFT, 60}, {33, SHIFT, 61}, {37, SHIFT, 62}, {38, SHIFT, 242}, {41, SHIFT, 63}, {42, SHIFT, 64}, {43, SHIFT, 65}, },
			{{-1, ERROR, 233}, {44, SHIFT, 2}, },
			{{-1, ERROR, 234}, {44, SHIFT, 2}, },
			{{-1, ERROR, 235}, {41, SHIFT, 246}, },
			{{-1, ERROR, 236}, {44, SHIFT, 2}, },
			{{-1, ERROR, 237}, {41, SHIFT, 248}, },
			{{-1, ERROR, 238}, {41, SHIFT, 249}, },
			{{-1, ERROR, 239}, {5, SHIFT, 250}, },
			{{-1, ERROR, 240}, {4, SHIFT, 251}, {5, SHIFT, 252}, },
			{{-1, ERROR, 241}, {5, SHIFT, 254}, },
			{{-1, REDUCE, 93}, {44, REDUCE, 51}, },
			{{-1, ERROR, 243}, {38, SHIFT, 255}, },
			{{-1, REDUCE, 29}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 27}, {44, SHIFT, 11}, },
			{{-1, ERROR, 246}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 26}, {44, SHIFT, 11}, },
			{{-1, ERROR, 248}, {44, SHIFT, 2}, },
			{{-1, ERROR, 249}, {44, SHIFT, 2}, },
			{{-1, ERROR, 250}, {41, SHIFT, 259}, },
			{{-1, ERROR, 251}, {44, SHIFT, 2}, },
			{{-1, ERROR, 252}, {8, SHIFT, 261}, },
			{{-1, ERROR, 253}, {5, SHIFT, 262}, },
			{{-1, ERROR, 254}, {12, SHIFT, 263}, },
			{{-1, REDUCE, 95}, {44, REDUCE, 53}, },
			{{-1, REDUCE, 31}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 30}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 28}, {44, SHIFT, 11}, },
			{{-1, ERROR, 259}, {44, SHIFT, 2}, },
			{{-1, REDUCE, 42}, {6, SHIFT, 54}, {8, SHIFT, 176}, {12, SHIFT, 177}, {13, SHIFT, 55}, {14, SHIFT, 56}, {16, SHIFT, 58}, {20, SHIFT, 59}, {37, SHIFT, 62}, {41, SHIFT, 178}, {42, SHIFT, 64}, {43, SHIFT, 65}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 262}, {8, SHIFT, 266}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 32}, {44, SHIFT, 11}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 48}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 3}, },
			{{-1, 7}, {10, 17}, {20, 17}, },
			{{-1, 8}, {0, 4}, {5, 12}, {9, 16}, {18, 16}, {19, 16}, {24, 16}, },
			{{-1, 15}, },
			{{-1, 28}, {30, 41}, {47, 41}, {160, 41}, {171, 41}, {173, 41}, {190, 41}, },
			{{-1, 37}, {75, 112}, {114, 147}, },
			{{-1, 38}, {37, 79}, },
			{{-1, 29}, {31, 45}, {42, 45}, {48, 45}, {87, 45}, },
			{{-1, 77}, },
			{{-1, 116}, {117, 149}, },
			{{-1, 78}, {115, 148}, },
			{{-1, 53}, {56, 90}, {113, 145}, },
			{{-1, 179}, {184, 202}, {185, 203}, {187, 205}, {204, 221}, {206, 223}, {207, 224}, {225, 239}, {226, 240}, {227, 241}, {260, 265}, },
			{{-1, 180}, {183, 201}, },
			{{-1, 181}, },
			{{-1, 196}, {197, 216}, },
			{{-1, 253}, },
			{{-1, 126}, {157, 167}, {194, 213}, {232, 243}, },
			{{-1, 154}, {155, 165}, },
			{{-1, 127}, {35, 66}, {62, 94}, {89, 123}, {153, 164}, {176, 191}, {192, 210}, {193, 211}, {195, 214}, {215, 230}, },
			{{-1, 67}, {99, 131}, },
			{{-1, 68}, {100, 132}, },
			{{-1, 69}, {101, 133}, {102, 134}, {103, 135}, {104, 136}, },
			{{-1, 70}, {105, 137}, },
			{{-1, 71}, {106, 138}, {107, 139}, },
			{{-1, 72}, {57, 91}, {108, 140}, {109, 141}, },
			{{-1, 73}, {60, 92}, {61, 93}, },
			{{-1, 97}, {98, 130}, },
			{{-1, 74}, {96, 129}, {168, 182}, {183, 182}, {184, 182}, {185, 182}, {187, 182}, {204, 182}, {206, 182}, {207, 182}, {225, 182}, {226, 182}, {227, 182}, {260, 182}, },
			{{-1, 39}, {0, 5}, {4, 9}, {10, 18}, {12, 19}, {14, 22}, {20, 24}, {23, 32}, {37, 80}, {38, 81}, {79, 118}, {111, 143}, {144, 161}, {146, 162}, {158, 168}, {163, 174}, {169, 184}, {170, 185}, {172, 187}, {181, 199}, {186, 204}, {188, 206}, {189, 207}, {208, 225}, {209, 226}, {210, 227}, {217, 231}, {233, 244}, {234, 245}, {236, 247}, {246, 256}, {248, 257}, {249, 258}, {251, 260}, {259, 264}, },
			{{-1, 10}, {12, 20}, },
			{{-1, 30}, {32, 47}, {143, 160}, {161, 171}, {162, 173}, {174, 190}, },
			{{-1, 31}, {30, 42}, {32, 48}, {47, 87}, },
			{{-1, 117}, },
			{{-1, 183}, },
			{{-1, 197}, },
			{{-1, 155}, },
			{{-1, 98}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'class', eol",
			"expecting: id",
			"expecting: 'begin', 'class', 'else', 'end', 'false', 'if', 'loop', 'me', 'new', 'null', 'true', '(', id, intlit, strlit, eol, EOF",
			"expecting: EOF",
			"expecting: 'class', eol, EOF",
			"expecting: 'inherits', 'is'",
			"expecting: 'from'",
			"expecting: eol",
			"expecting: 'is'",
			"expecting: 'end', id, eol",
			"expecting: ':', ':=', '(', eol",
			"expecting: 'begin', 'end', id",
			"expecting: 'end', id",
			"expecting: 'boolean', 'int', 'string', id",
			"expecting: 'false', 'me', 'new', 'not', 'null', 'true', '+', '-', '(', id, intlit, strlit",
			"expecting: ')', id",
			"expecting: ':=', eol",
			"expecting: 'begin', 'end', id, eol",
			"expecting: '('",
			"expecting: 'and', 'is', 'or', 'then', ',', ';', '.', '<', '>', '=', '>=', '&', '+', '-', '*', '/', ':=', ')', '[', ']', eol",
			"expecting: 'is', ':=', '[', eol",
			"expecting: 'and', 'or', 'then', ',', '.', '<', '>', '=', '>=', '&', '+', '-', '*', '/', ')', ']', eol",
			"expecting: 'false', 'me', 'new', 'null', 'true', '(', id, intlit, strlit",
			"expecting: 'and', 'or', 'then', ',', '.', '<', '>', '=', '>=', '&', '+', '-', '*', '/', '(', ')', '[', ']', eol",
			"expecting: 'or', eol",
			"expecting: 'and', 'or', 'then', ',', ')', ']', eol",
			"expecting: 'and', 'or', 'then', ',', '<', '>', '=', '>=', '&', ')', ']', eol",
			"expecting: 'and', 'or', 'then', ',', '<', '>', '=', '>=', '&', '+', '-', ')', ']', eol",
			"expecting: 'and', 'or', 'then', ',', '<', '>', '=', '>=', '&', '+', '-', '*', '/', ')', ']', eol",
			"expecting: 'is', ':'",
			"expecting: ':'",
			"expecting: ')'",
			"expecting: ';', ')'",
			"expecting: 'and', 'or', 'then', ',', '.', '<', '>', '=', '>=', '&', '+', '-', '*', '/', ')', '[', ']', eol",
			"expecting: 'or', ')'",
			"expecting: 'false', 'me', 'new', 'not', 'null', 'true', '+', '-', '(', ')', id, intlit, strlit",
			"expecting: 'and', 'or', 'then', ',', '<', '>', '=', '>=', '&', '+', '-', '*', '/', ')', '[', ']', eol",
			"expecting: 'or', ']'",
			"expecting: 'or', ',', ')'",
			"expecting: '.', '(', ']'",
			"expecting: '.', ']'",
			"expecting: 'and', 'or', 'then', ',', '&', ')', ']', eol",
			"expecting: 'begin', id, eol",
			"expecting: ';', ')', '['",
			"expecting: ',', ')'",
			"expecting: ':', ':=', eol",
			"expecting: 'begin', id",
			"expecting: 'end', 'false', 'if', 'loop', 'me', 'new', 'null', 'true', '(', id, intlit, strlit, eol",
			"expecting: 'while'",
			"expecting: '.', ':=', '(', '['",
			"expecting: 'end'",
			"expecting: 'else', 'end', 'false', 'if', 'loop', 'me', 'new', 'null', 'true', '(', id, intlit, strlit",
			"expecting: '.'",
			"expecting: 'or', 'then'",
			"expecting: ':=', '['",
			"expecting: 'else', 'end', 'false', 'if', 'loop', 'me', 'new', 'null', 'true', '(', id, intlit, strlit, eol",
			"expecting: '.', eol",
			"expecting: 'else', 'end'",
			"expecting: 'if'",
			"expecting: 'loop'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 0, 5, 4, 4, 4, 4, 2, 4, 6, 7, 8, 4, 4, 4, 4, 4, 1, 9, 7, 4, 8, 1, 10, 11, 12, 12, 12, 9, 4, 13, 14, 15, 16, 7, 17, 1, 11, 12, 1, 18, 12, 1, 12, 12, 19, 19, 19, 19, 20, 21, 21, 13, 14, 21, 21, 22, 22, 14, 23, 21, 21, 24, 25, 25, 26, 27, 28, 28, 28, 21, 29, 30, 31, 32, 7, 17, 17, 4, 1, 4, 4, 1, 12, 1, 14, 33, 28, 28, 28, 34, 35, 22, 36, 36, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 1, 7, 8, 13, 29, 1, 32, 32, 17, 4, 4, 1, 4, 37, 21, 21, 31, 38, 39, 40, 36, 25, 25, 41, 41, 41, 41, 27, 28, 28, 28, 28, 18, 42, 7, 43, 7, 8, 32, 32, 4, 19, 21, 14, 44, 44, 36, 35, 7, 45, 46, 42, 42, 7, 38, 44, 21, 31, 47, 7, 7, 46, 7, 46, 42, 21, 14, 48, 49, 50, 51, 7, 52, 51, 47, 47, 7, 47, 7, 7, 46, 53, 14, 14, 35, 14, 54, 54, 1, 55, 1, 51, 50, 50, 47, 50, 47, 47, 7, 7, 24, 24, 56, 31, 37, 14, 54, 7, 18, 1, 1, 50, 1, 50, 50, 47, 55, 47, 56, 54, 24, 9, 35, 7, 7, 1, 7, 1, 1, 50, 57, 50, 56, 31, 9, 9, 7, 9, 7, 7, 1, 7, 58, 50, 59, 56, 9, 9, 9, 7, 47, 7, 58, 7, 9, 50, 7, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
