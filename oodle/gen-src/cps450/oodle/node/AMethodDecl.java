/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import java.util.*;
import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class AMethodDecl extends PMethodDecl
{
    private TId _startId_;
    private TLPar _lPar_;
    private PArgumentDeclList _argumentDeclList_;
    private TRPar _rPar_;
    private PVarType _varType_;
    private TIs _is_;
    private TEol _e1_;
    private final LinkedList<PVarDecl> _varDecl_ = new LinkedList<PVarDecl>();
    private TBegin _begin_;
    private TEol _e2_;
    private PStatementList _statementList_;
    private TEnd _end_;
    private TId _endId_;
    private TEol _e3_;

    public AMethodDecl()
    {
        // Constructor
    }

    public AMethodDecl(
        @SuppressWarnings("hiding") TId _startId_,
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") PArgumentDeclList _argumentDeclList_,
        @SuppressWarnings("hiding") TRPar _rPar_,
        @SuppressWarnings("hiding") PVarType _varType_,
        @SuppressWarnings("hiding") TIs _is_,
        @SuppressWarnings("hiding") TEol _e1_,
        @SuppressWarnings("hiding") List<PVarDecl> _varDecl_,
        @SuppressWarnings("hiding") TBegin _begin_,
        @SuppressWarnings("hiding") TEol _e2_,
        @SuppressWarnings("hiding") PStatementList _statementList_,
        @SuppressWarnings("hiding") TEnd _end_,
        @SuppressWarnings("hiding") TId _endId_,
        @SuppressWarnings("hiding") TEol _e3_)
    {
        // Constructor
        setStartId(_startId_);

        setLPar(_lPar_);

        setArgumentDeclList(_argumentDeclList_);

        setRPar(_rPar_);

        setVarType(_varType_);

        setIs(_is_);

        setE1(_e1_);

        setVarDecl(_varDecl_);

        setBegin(_begin_);

        setE2(_e2_);

        setStatementList(_statementList_);

        setEnd(_end_);

        setEndId(_endId_);

        setE3(_e3_);

    }

    @Override
    public Object clone()
    {
        return new AMethodDecl(
            cloneNode(this._startId_),
            cloneNode(this._lPar_),
            cloneNode(this._argumentDeclList_),
            cloneNode(this._rPar_),
            cloneNode(this._varType_),
            cloneNode(this._is_),
            cloneNode(this._e1_),
            cloneList(this._varDecl_),
            cloneNode(this._begin_),
            cloneNode(this._e2_),
            cloneNode(this._statementList_),
            cloneNode(this._end_),
            cloneNode(this._endId_),
            cloneNode(this._e3_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMethodDecl(this);
    }

    public TId getStartId()
    {
        return this._startId_;
    }

    public void setStartId(TId node)
    {
        if(this._startId_ != null)
        {
            this._startId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._startId_ = node;
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public PArgumentDeclList getArgumentDeclList()
    {
        return this._argumentDeclList_;
    }

    public void setArgumentDeclList(PArgumentDeclList node)
    {
        if(this._argumentDeclList_ != null)
        {
            this._argumentDeclList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._argumentDeclList_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    public PVarType getVarType()
    {
        return this._varType_;
    }

    public void setVarType(PVarType node)
    {
        if(this._varType_ != null)
        {
            this._varType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varType_ = node;
    }

    public TIs getIs()
    {
        return this._is_;
    }

    public void setIs(TIs node)
    {
        if(this._is_ != null)
        {
            this._is_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._is_ = node;
    }

    public TEol getE1()
    {
        return this._e1_;
    }

    public void setE1(TEol node)
    {
        if(this._e1_ != null)
        {
            this._e1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._e1_ = node;
    }

    public LinkedList<PVarDecl> getVarDecl()
    {
        return this._varDecl_;
    }

    public void setVarDecl(List<PVarDecl> list)
    {
        this._varDecl_.clear();
        this._varDecl_.addAll(list);
        for(PVarDecl e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public TBegin getBegin()
    {
        return this._begin_;
    }

    public void setBegin(TBegin node)
    {
        if(this._begin_ != null)
        {
            this._begin_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._begin_ = node;
    }

    public TEol getE2()
    {
        return this._e2_;
    }

    public void setE2(TEol node)
    {
        if(this._e2_ != null)
        {
            this._e2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._e2_ = node;
    }

    public PStatementList getStatementList()
    {
        return this._statementList_;
    }

    public void setStatementList(PStatementList node)
    {
        if(this._statementList_ != null)
        {
            this._statementList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statementList_ = node;
    }

    public TEnd getEnd()
    {
        return this._end_;
    }

    public void setEnd(TEnd node)
    {
        if(this._end_ != null)
        {
            this._end_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._end_ = node;
    }

    public TId getEndId()
    {
        return this._endId_;
    }

    public void setEndId(TId node)
    {
        if(this._endId_ != null)
        {
            this._endId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._endId_ = node;
    }

    public TEol getE3()
    {
        return this._e3_;
    }

    public void setE3(TEol node)
    {
        if(this._e3_ != null)
        {
            this._e3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._e3_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._startId_)
            + toString(this._lPar_)
            + toString(this._argumentDeclList_)
            + toString(this._rPar_)
            + toString(this._varType_)
            + toString(this._is_)
            + toString(this._e1_)
            + toString(this._varDecl_)
            + toString(this._begin_)
            + toString(this._e2_)
            + toString(this._statementList_)
            + toString(this._end_)
            + toString(this._endId_)
            + toString(this._e3_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._startId_ == child)
        {
            this._startId_ = null;
            return;
        }

        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._argumentDeclList_ == child)
        {
            this._argumentDeclList_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        if(this._varType_ == child)
        {
            this._varType_ = null;
            return;
        }

        if(this._is_ == child)
        {
            this._is_ = null;
            return;
        }

        if(this._e1_ == child)
        {
            this._e1_ = null;
            return;
        }

        if(this._varDecl_.remove(child))
        {
            return;
        }

        if(this._begin_ == child)
        {
            this._begin_ = null;
            return;
        }

        if(this._e2_ == child)
        {
            this._e2_ = null;
            return;
        }

        if(this._statementList_ == child)
        {
            this._statementList_ = null;
            return;
        }

        if(this._end_ == child)
        {
            this._end_ = null;
            return;
        }

        if(this._endId_ == child)
        {
            this._endId_ = null;
            return;
        }

        if(this._e3_ == child)
        {
            this._e3_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._startId_ == oldChild)
        {
            setStartId((TId) newChild);
            return;
        }

        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._argumentDeclList_ == oldChild)
        {
            setArgumentDeclList((PArgumentDeclList) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if(this._varType_ == oldChild)
        {
            setVarType((PVarType) newChild);
            return;
        }

        if(this._is_ == oldChild)
        {
            setIs((TIs) newChild);
            return;
        }

        if(this._e1_ == oldChild)
        {
            setE1((TEol) newChild);
            return;
        }

        for(ListIterator<PVarDecl> i = this._varDecl_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarDecl) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._begin_ == oldChild)
        {
            setBegin((TBegin) newChild);
            return;
        }

        if(this._e2_ == oldChild)
        {
            setE2((TEol) newChild);
            return;
        }

        if(this._statementList_ == oldChild)
        {
            setStatementList((PStatementList) newChild);
            return;
        }

        if(this._end_ == oldChild)
        {
            setEnd((TEnd) newChild);
            return;
        }

        if(this._endId_ == oldChild)
        {
            setEndId((TId) newChild);
            return;
        }

        if(this._e3_ == oldChild)
        {
            setE3((TEol) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
