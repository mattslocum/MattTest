/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class AExpIdPart extends PExpIdPart
{
    private TLBar _lBar_;
    private PExpression _expression_;
    private TRBar _rBar_;

    public AExpIdPart()
    {
        // Constructor
    }

    public AExpIdPart(
        @SuppressWarnings("hiding") TLBar _lBar_,
        @SuppressWarnings("hiding") PExpression _expression_,
        @SuppressWarnings("hiding") TRBar _rBar_)
    {
        // Constructor
        setLBar(_lBar_);

        setExpression(_expression_);

        setRBar(_rBar_);

    }

    @Override
    public Object clone()
    {
        return new AExpIdPart(
            cloneNode(this._lBar_),
            cloneNode(this._expression_),
            cloneNode(this._rBar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpIdPart(this);
    }

    public TLBar getLBar()
    {
        return this._lBar_;
    }

    public void setLBar(TLBar node)
    {
        if(this._lBar_ != null)
        {
            this._lBar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBar_ = node;
    }

    public PExpression getExpression()
    {
        return this._expression_;
    }

    public void setExpression(PExpression node)
    {
        if(this._expression_ != null)
        {
            this._expression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression_ = node;
    }

    public TRBar getRBar()
    {
        return this._rBar_;
    }

    public void setRBar(TRBar node)
    {
        if(this._rBar_ != null)
        {
            this._rBar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lBar_)
            + toString(this._expression_)
            + toString(this._rBar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lBar_ == child)
        {
            this._lBar_ = null;
            return;
        }

        if(this._expression_ == child)
        {
            this._expression_ = null;
            return;
        }

        if(this._rBar_ == child)
        {
            this._rBar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lBar_ == oldChild)
        {
            setLBar((TLBar) newChild);
            return;
        }

        if(this._expression_ == oldChild)
        {
            setExpression((PExpression) newChild);
            return;
        }

        if(this._rBar_ == oldChild)
        {
            setRBar((TRBar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
