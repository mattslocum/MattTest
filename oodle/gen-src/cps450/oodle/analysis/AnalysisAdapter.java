/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.analysis;

import java.util.*;
import cps450.oodle.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAAStart(AAStart node)
    {
        defaultCase(node);
    }

    public void caseAAClassDef(AAClassDef node)
    {
        defaultCase(node);
    }

    public void caseAAInherit(AAInherit node)
    {
        defaultCase(node);
    }

    public void caseAAVarDecl(AAVarDecl node)
    {
        defaultCase(node);
    }

    public void caseAAMethodDecl(AAMethodDecl node)
    {
        defaultCase(node);
    }

    public void caseAAArgDecl(AAArgDecl node)
    {
        defaultCase(node);
    }

    public void caseAIntAType(AIntAType node)
    {
        defaultCase(node);
    }

    public void caseABooleanAType(ABooleanAType node)
    {
        defaultCase(node);
    }

    public void caseAIdAType(AIdAType node)
    {
        defaultCase(node);
    }

    public void caseAStringAType(AStringAType node)
    {
        defaultCase(node);
    }

    public void caseAExpAType(AExpAType node)
    {
        defaultCase(node);
    }

    public void caseAAssignAStmt(AAssignAStmt node)
    {
        defaultCase(node);
    }

    public void caseAIfAStmt(AIfAStmt node)
    {
        defaultCase(node);
    }

    public void caseALoopAStmt(ALoopAStmt node)
    {
        defaultCase(node);
    }

    public void caseACallAStmt(ACallAStmt node)
    {
        defaultCase(node);
    }

    public void caseABinAExpr(ABinAExpr node)
    {
        defaultCase(node);
    }

    public void caseAIntAExpr(AIntAExpr node)
    {
        defaultCase(node);
    }

    public void caseAStrAExpr(AStrAExpr node)
    {
        defaultCase(node);
    }

    public void caseAIdAExpr(AIdAExpr node)
    {
        defaultCase(node);
    }

    public void caseATrueAExpr(ATrueAExpr node)
    {
        defaultCase(node);
    }

    public void caseAFalseAExpr(AFalseAExpr node)
    {
        defaultCase(node);
    }

    public void caseANullAExpr(ANullAExpr node)
    {
        defaultCase(node);
    }

    public void caseAMeAExpr(AMeAExpr node)
    {
        defaultCase(node);
    }

    public void caseANewAExpr(ANewAExpr node)
    {
        defaultCase(node);
    }

    public void caseAParAExpr(AParAExpr node)
    {
        defaultCase(node);
    }

    public void caseACallAExpr(ACallAExpr node)
    {
        defaultCase(node);
    }

    public void caseANegAExpr(ANegAExpr node)
    {
        defaultCase(node);
    }

    public void caseAPosAExpr(APosAExpr node)
    {
        defaultCase(node);
    }

    public void caseANotAExpr(ANotAExpr node)
    {
        defaultCase(node);
    }

    public void caseAArrayAExpr(AArrayAExpr node)
    {
        defaultCase(node);
    }

    public void caseAOrAOp(AOrAOp node)
    {
        defaultCase(node);
    }

    public void caseAAndAOp(AAndAOp node)
    {
        defaultCase(node);
    }

    public void caseAEqAOp(AEqAOp node)
    {
        defaultCase(node);
    }

    public void caseAGtAOp(AGtAOp node)
    {
        defaultCase(node);
    }

    public void caseALtAOp(ALtAOp node)
    {
        defaultCase(node);
    }

    public void caseAGteqAOp(AGteqAOp node)
    {
        defaultCase(node);
    }

    public void caseAConcatAOp(AConcatAOp node)
    {
        defaultCase(node);
    }

    public void caseAPlusAOp(APlusAOp node)
    {
        defaultCase(node);
    }

    public void caseAMinusAOp(AMinusAOp node)
    {
        defaultCase(node);
    }

    public void caseAMulAOp(AMulAOp node)
    {
        defaultCase(node);
    }

    public void caseADivAOp(ADivAOp node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    public void caseTBegin(TBegin node)
    {
        defaultCase(node);
    }

    public void caseTClassKw(TClassKw node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTEnd(TEnd node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTFrom(TFrom node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTInherits(TInherits node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTIs(TIs node)
    {
        defaultCase(node);
    }

    public void caseTLoop(TLoop node)
    {
        defaultCase(node);
    }

    public void caseTMe(TMe node)
    {
        defaultCase(node);
    }

    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTBang(TBang node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTPeriod(TPeriod node)
    {
        defaultCase(node);
    }

    public void caseTLtOp(TLtOp node)
    {
        defaultCase(node);
    }

    public void caseTGtOp(TGtOp node)
    {
        defaultCase(node);
    }

    public void caseTEqOp(TEqOp node)
    {
        defaultCase(node);
    }

    public void caseTGteqOp(TGteqOp node)
    {
        defaultCase(node);
    }

    public void caseTConcatOp(TConcatOp node)
    {
        defaultCase(node);
    }

    public void caseTPlusOp(TPlusOp node)
    {
        defaultCase(node);
    }

    public void caseTMinusOp(TMinusOp node)
    {
        defaultCase(node);
    }

    public void caseTMultOp(TMultOp node)
    {
        defaultCase(node);
    }

    public void caseTDivOp(TDivOp node)
    {
        defaultCase(node);
    }

    public void caseTAsignOp(TAsignOp node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBar(TLBar node)
    {
        defaultCase(node);
    }

    public void caseTRBar(TRBar node)
    {
        defaultCase(node);
    }

    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    public void caseTIntlit(TIntlit node)
    {
        defaultCase(node);
    }

    public void caseTStrlit(TStrlit node)
    {
        defaultCase(node);
    }

    public void caseTContLine(TContLine node)
    {
        defaultCase(node);
    }

    public void caseTEol(TEol node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTErrIllStr(TErrIllStr node)
    {
        defaultCase(node);
    }

    public void caseTErrUntermStr(TErrUntermStr node)
    {
        defaultCase(node);
    }

    public void caseTErrIllChar(TErrIllChar node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
