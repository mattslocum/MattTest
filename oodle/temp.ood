~ expr1.ood
~ Tests expression type checking

class Expr1 is

  n1: int
  n2: int
  b1: boolean
  b2: boolean
  
  start() is
  begin
    ~ legal
  
    b1 := b1
    b1 := b2
    b2 := true and (not b1)
    n1 := 5 * 15 - 2
    n2 := -35 + 15 * n1 / n2
  
  
    b1 := b2
    n2 := 5 * 3
    b2 := true
  
    b2 := false
    b2 := not b1
  
  end start
  
end Expr1

~ Tests scalar type checking with method calls

class meth1ok is

  b1: boolean
  i1: int
  
  s1: string
  
  boolmeth(x: int; b1: boolean): boolean is
  begin
    boolmeth := b1 or (x > 5)
  end boolmeth
  
  strmeth(): string is
  begin
    strmeth := "Test"
  end strmeth

  start() is
  begin
  
    b1 := boolmeth(5, true)
  
    s1 := s1 & strmeth()
    out.writeint(i1)
    i1 := in.readint()
    in.readint()
    
  end start

end meth1ok
~
~ stmt1.ood
~ - Tests semantics of loop statements
~

class stmt1 is

  x: int

  start() is
  begin
    loop while true
      x := x + 1
    end loop
  
    if false then
      x := x - 1
    end if
  end start 

end stmt1
~ test0.f
~ Tests scalar type checking with assignment stmts

class test0 is

  b1: boolean
  b2: boolean
  
  b3: boolean
  
  i1: int
  i2: int

  start() is
  begin
  
    b1 := true
    b2 := not b1 and true
    b3 := i1 > i2
    b2 := false
    b3 := b1 or true
  
    i1 := 10
    i1 := 10 * i2 - i1
    i1 := 0 + (3 - 4) * -1
    i1 := 10 + i2 - i1
    
  end start

end test0
